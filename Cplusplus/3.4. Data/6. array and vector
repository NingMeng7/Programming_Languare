(1) 模板类vector
  #include <vector>
  a)  定义： 
            vector <int> a1;      //定义长度为0的int型vector
            vector <int> a2(10);  //定义长度为10的int型vector 
  b)  vector类似string类，是一种动态数组，可以在运行阶段设置vector对象的长度，可以在末尾附加信数据，在中间插入新数据
  c)  vector和string类一样，需要std::vector
  d)  在C++11中可以用一个列表初始化vector，而C++98不可以
  e)  vector的空间在堆中，事实上vector是自动完成new和delete的
  
(2) 模板类array
  #include <array>
  vector 功能很强大，但是长度可变的代价是效率比较低，如果需要长度固定的数组，可以考虑使用array
  a)  定义:
            array<int, 5> ai;  //  5个int的array
            array<double, 4> ad = {1.2,2.1,3.43,4.3};
            与vector不同，array的长度指示不能是变量
  b)  array的空间也在栈中
  c)  可以将一个array对象赋给另一个array对象
 
 
vector 和 array 都可以用标准数组表示法来访问元素
